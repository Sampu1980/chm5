cmake_minimum_required(VERSION 3.5 FATAL_ERROR)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated-declarations")
add_library(
    manager
    STATIC
        DpCommonPbTranslator.cpp
        DataPlaneMgr.cpp
        DataPlaneMgrLog.cpp
        DataPlaneMgrCmds.cpp
        DpCardMgr.cpp
        DpGigeClientMgr.cpp
        GigeClientConfigHandler.cpp
        GigeClientStateCollector.cpp
        GigeClientPbTranslator.cpp
        DpCarrierMgr.cpp
        CarrierConfigHandler.cpp
        CarrierStateCollector.cpp
        CarrierPbTranslator.cpp
        GccConfigHandler.cpp
        GccPbTranslator.cpp
        DpOtuMgr.cpp
        OtuConfigHandler.cpp
        OtuStateCollector.cpp
        OtuPbTranslator.cpp
        DpOduMgr.cpp
        OduConfigHandler.cpp
        OduStateCollector.cpp
        OduPbTranslator.cpp
        DpXcMgr.cpp
        CardConfigHandler.cpp
        DcoSecProcCardCfgHdlr.cpp
        CardStateCollector.cpp
        CardPbTranslator.cpp
        XCConfigHandler.cpp
        XCStateCollector.cpp
        XcPbTranslator.cpp
        DpPmHandler.cpp
        DpGccMgr.cpp
        DcoSecProcCarrierCfgHdlr.cpp
        DpConfigHandler.cpp
        DpObjectMgr.cpp
        DpStateCollector.cpp
        DpKeyMgmtMgr.cpp
    )

target_sources(
    manager
    PRIVATE
        DpCommonPbTranslator.cpp
        DataPlaneMgr.cpp
        DataPlaneMgrLog.cpp
        DataPlaneMgrCmds.cpp
        DpCardMgr.cpp
        DpCarrierMgr.cpp
        CarrierConfigHandler.cpp
        CarrierStateCollector.cpp
        CarrierPbTranslator.cpp
        GccConfigHandler.cpp
        GccPbTranslator.cpp
        DpGigeClientMgr.cpp
        GigeClientConfigHandler.cpp
        GigeClientStateCollector.cpp
        GigeClientPbTranslator.cpp
        DpOtuMgr.cpp
        OtuConfigHandler.cpp
        OtuStateCollector.cpp
        OtuPbTranslator.cpp
        DpOduMgr.cpp
        OduConfigHandler.cpp
        OduStateCollector.cpp
        OduPbTranslator.cpp
        DpXcMgr.cpp
        CardConfigHandler.cpp
        DcoSecProcCardCfgHdlr.cpp
        CardStateCollector.cpp
        CardPbTranslator.cpp
        XCConfigHandler.cpp
        XCStateCollector.cpp
        XcPbTranslator.cpp
        DpPmHandler.cpp
        DpGccMgr.cpp
        DpPeerDiscoveryMgr.cpp
        DpConfigHandler.cpp
        DpObjectMgr.cpp
        DpStateCollector.cpp
    PUBLIC
        ${CMAKE_CURRENT_LIST_DIR}/DpCommonPbTranslator.h
        ${CMAKE_CURRENT_LIST_DIR}/DataPlaneMgr.h
        ${CMAKE_CURRENT_LIST_DIR}/DataPlaneMgrLog.h
        ${CMAKE_CURRENT_LIST_DIR}/DataPlaneMgrCmds.h
        ${CMAKE_CURRENT_LIST_DIR}/DpCardMgr.h
        ${CMAKE_CURRENT_LIST_DIR}/DpCarrierMgr.h
        ${CMAKE_CURRENT_LIST_DIR}/CarrierConfigHandler.h
        ${CMAKE_CURRENT_LIST_DIR}/CarrierStateCollector.h
        ${CMAKE_CURRENT_LIST_DIR}/CarrierPbTranslator.h
        ${CMAKE_CURRENT_LIST_DIR}/GccConfigHandler.h
        ${CMAKE_CURRENT_LIST_DIR}/GccPbTranslator.h
        ${CMAKE_CURRENT_LIST_DIR}/DpGigeClientMgr.h
        ${CMAKE_CURRENT_LIST_DIR}/GigeClientConfigHandler.h
        ${CMAKE_CURRENT_LIST_DIR}/GigeClientStateCollector.h
        ${CMAKE_CURRENT_LIST_DIR}/GigeClientPbTranslator.h
        ${CMAKE_CURRENT_LIST_DIR}/DpOtuMgr.h
        ${CMAKE_CURRENT_LIST_DIR}/OtuConfigHandler.h
        ${CMAKE_CURRENT_LIST_DIR}/OtuStateCollector.h
        ${CMAKE_CURRENT_LIST_DIR}/OtuPbTranslator.h
        ${CMAKE_CURRENT_LIST_DIR}/DpOduMgr.h
        ${CMAKE_CURRENT_LIST_DIR}/OduConfigHandler.h
        ${CMAKE_CURRENT_LIST_DIR}/OduStateCollector.h
        ${CMAKE_CURRENT_LIST_DIR}/OduPbTranslator.h
        ${CMAKE_CURRENT_LIST_DIR}/DpXcMgr.h
        ${CMAKE_CURRENT_LIST_DIR}/CardConfigHandler.h
        ${CMAKE_CURRENT_LIST_DIR}/DcoSecProcCardCfgHdlr.h
        ${CMAKE_CURRENT_LIST_DIR}/CardStateCollector.h
        ${CMAKE_CURRENT_LIST_DIR}/CardPbTranslator.h
        ${CMAKE_CURRENT_LIST_DIR}/XCConfigHandler.h
        ${CMAKE_CURRENT_LIST_DIR}/XCStateCollector.h
        ${CMAKE_CURRENT_LIST_DIR}/XcPbTranslator.h
        ${CMAKE_CURRENT_LIST_DIR}/DpPmHandler.h
        ${CMAKE_CURRENT_LIST_DIR}/DpObjectMgr.h
        ${CMAKE_CURRENT_LIST_DIR}/DpProtoDefs.h
        ${CMAKE_CURRENT_LIST_DIR}/DpGccMgr.h
        ${CMAKE_CURRENT_LIST_DIR}/DpStateCollector.h
        ${CMAKE_CURRENT_LIST_DIR}/DcoSecProcCarrierCfgHdlr.h
        ${CMAKE_CURRENT_LIST_DIR}/DpPeerDiscoveryMgr.h
        ${CMAKE_CURRENT_LIST_DIR}/DpConfigHandler.h
        ${CMAKE_CURRENT_LIST_DIR}/DpPeerDiscoveryMgr.h
        ${CMAKE_CURRENT_LIST_DIR}/DpKeyMgmtMgr.h
    )

# setting for gearbox


target_include_directories(
    manager
    PUBLIC
        ${DCO_INTF_INC_DIR}
        ${DCO_INTF_SRC_DIR}
        ${YGOT_INC_DIR}
        ${CMAKE_CURRENT_LIST_DIR}
        ${CMAKE_CURRENT_LIST_DIR}/../adapter
        ${CMAKE_CURRENT_LIST_DIR}/../gearbox
        ${SERDES_TNR_MGR_DIR}
        ${SERDES_INCLUDE_DIR}
        ${DP_COMMON_DIR}
        ${BOOST_INCLUDE_DIR}
        ${UTIL_INCLUDE_DIR}
        ${BCM_EPDM_DIR}
        ${BCM_MILB_DIR}
        ${DP_MANAGER_INC_DIR}
        ${DP_PROTOBUF_INC_DIR}
        ${GRPC_ADAPTER_SRC_DIR}
        ${REDIS_ADAPTER_INC_DIR}
        ${CLI_INCLUDE_DIR}
        ${DP_SIM_GNMI_INC_DIR}
        ${LOGGER_INCLUDE_DIR}
    )

target_link_libraries(
    manager
    ${USR_LIB_DIR_ARCH}/libboost_system.a
    ${USR_LIB_DIR_ARCH}/libboost_thread.a
    ${USR_LIB_DIR_ARCH}/libboost_filesystem.a    #for logFile
    ${USR_LIB_DIR_ARCH}/libhiredis.a
    ${USR_LIB_DIR}/libprotobuf.a
#    ${USR_LIB_DIR_ARCH}/libredis++.a
    ${USR_LIB_DIR_ARCH}/libInfnTracer.a
    ${USR_LIB_DIR_ARCH}/liblightstep_tracer.a
    ${USR_LIB_DIR_ARCH}/libopentracing.a
    ${USR_LIB_DIR_ARCH}/libopentracing_mocktracer.a
    ${REDIS_ADAPTER_LIB_DIR}/libredisadapter.a
    opentracing
    )
